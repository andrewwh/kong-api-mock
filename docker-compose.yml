version: '3.4'

volumes:
    kong_data: {}
networks:
  kong-net:
services:
  kong-migrations:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    container_name: kong-migrations
    command: kong migrations bootstrap
    depends_on:
      - kong-db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
    links:
      - kong-db
    networks:
      - kong-net
    restart: on-failure
  kong-config:
    image: "kong-config:latest"
    container_name: kong-config
    build:
      context: ./
      dockerfile: ./kong-load/docker/Dockerfile
      network: host
    depends_on:
      - kong-db
    links:
      - kong
    networks:
      - kong-net
    environment:
      - GW_ENVIRONMENT
  kong:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    container_name: kong-gw
    depends_on:
      - kong-db
      - mock-api
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
      KONG_CASSANDRA_CONTACT_POINTS: kong-db
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
    networks:
      - kong-net
    ports:
      - "8000:8000/tcp"
      - "8001:8001/tcp"
      - "8443:8443/tcp"
      - "8444:8444/tcp"
    restart: on-failure
    links:
      - kong-db
      - "mock-api:mock-api.local"
  kong-db:
    image: postgres:9.5
    container_name: kong-db
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-kong}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    networks:
      - kong-net
    volumes:
      - kong_data:/var/lib/postgresql/data
  mock-api:
    image: mock-api:latest
    build:
      context: ./mock
      dockerfile: docker/Dockerfile
      network: host
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
    container_name: mock-api
    networks:
      - kong-net
    ports:
      - "8888:8888/tcp"